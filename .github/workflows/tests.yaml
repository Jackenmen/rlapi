name: Tests

on:
  - push
  - pull_request

jobs:
  style:
    name: Style check (black and isort)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Cache pip requirements
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-python3.8-pip-${{ hashfiles('setup.cfg') }}
          restore-keys: |
            ${{ runner.os }}-python3.8-pip-
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: "3.8"
      - name: Install dependencies
        run: |
          python -m pip install -U .[style]
      - name: Style check
        # running `isort --check` second time to make sure it doesn't fight with black
        run: |
          isort ./
          black ./
          isort --check ./
          git diff --exit-code
  flake8:
    name: Lint with Flake8
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: "3.8"
      - name: Install requirements
        run: |
          python -m pip install -U .[lint]
      - name: Lint with Flake8
        run: |
          python -m flake8
  docs:
    name: Build docs
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Cache pip requirements
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-python3.8-pip-${{ hashfiles('setup.cfg') }}
          restore-keys: |
            ${{ runner.os }}-python3.8-pip-
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: "3.8"
      - name: Install dependencies
        run: |
          python -m pip install -U .[docs]
      - name: Build HTML docs
        run: |
          sphinx-build docs docs/_build/html -W -b html
      - name: Docs link check
        run: |
          sphinx-build docs docs/_build/linkcheck -W -b linkcheck
  tests:
    name: Compile all, check with mypy
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version:
          - "3.8"
          - "3.9"
          - "3.10"
    steps:
      - uses: actions/checkout@v2
      - name: Cache pip requirements
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-python${{ matrix.python-version }}-pip-${{ hashfiles('setup.cfg') }}
          restore-keys: |
            ${{ runner.os }}-python${{ matrix.python-version }}-pip-
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          pip install -U .[tests]
      - name: Compile all
        run: |
          python -m compileall ./
      - name: Mypy typing check
        run: |
          mypy rlapi rlapi/ext
